# -*- coding: utf-8 -*-
"""Capstone 1_ML_ZoomCamp_2024.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qythwp1QKVRTGyEDkljQZVxjO6Zmk0sN

### CAPSTONE PROJECT 1

### LIBRARIES :
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

"""### READ THE DATASET :"""

df = pd.read_csv('space_missions_dataset.csv')
df.head()

df.tail()


"""### EDA"""

df.info()

df.isnull().sum()

df.duplicated().sum()

df.shape

df.describe().T

df.columns

df.nunique()

"""### CATEGORICAL AND NUMERICAL COLUMNS"""

cat_cols=df.select_dtypes(include=['object']).columns
num_cols = df.select_dtypes(include=np.number).columns.tolist()
print("Categorical Variables:")
print(cat_cols)
print("----------------------------------")
print("Numerical Variables:")
print(num_cols)

df.dtypes

"""### COLUMNS WITH A STANDARD DEVIATION"""

std_values = df[num_cols].std()
std_values

"""### MIN-MAX VALUES"""

for col in df.select_dtypes(include=np.number).columns:
    print(f'{col}: Min = {df[col].min()}, Max = {df[col].max()}')


"""### ANALYSIS OF TARGET VARIABLES"""

print(df['Mission Success (%)'].describe())

plt.figure(figsize=(10, 6))
sns.histplot(df['Mission Success (%)'], bins=50, kde=True)
plt.title("Mission Success (%) Distribution")
plt.xlabel("Mission Success (%)")
plt.ylabel("Frequency")
plt.show()

plt.figure(figsize=(8, 5))
sns.boxplot(x=df['Mission Success (%)'], color='yellow')
plt.title("Mission Success (%) Boxplot")
plt.xlabel("Mission Success (%)")
plt.show()

"""### HISTOGRAMS AND BOXPLOTS"""

df.hist(bins=30, figsize=(15, 10))
plt.show()

plt.figure(figsize=(15, 6))
sns.boxplot(data=df.select_dtypes(include=['float64', 'int64']))
plt.xticks(rotation=45)
plt.show()

"""### DISTRIBUTIONS OF NUMERICAL COLUMNS USING HISTOGRAMS"""

col_with_no_std = df.select_dtypes(include=np.number).columns.tolist()

num_cols = len(col_with_no_std)

fig, axes = plt.subplots(nrows=(num_cols // 2) + (num_cols % 2), ncols=2, figsize=(8, (num_cols // 2 + 1) * 3))

axes = axes.flatten()

for i, col in enumerate(col_with_no_std):
    sns.histplot(df[col], kde=True, ax=axes[i], color='yellow', bins=30, shrink=0.9)
    axes[i].set_title(f'Distribution of {col}')
    axes[i].set_xlabel(col)
    axes[i].set_ylabel('Frequency')

plt.tight_layout()
plt.show()

"""### CORRELATION MATRIX USING A HEATMAP"""

correlation_matrix = df[col_with_no_std].corr().round(2)
plt.figure(figsize=(10, 10))
sns.heatmap(correlation_matrix, cmap="BrBG", annot=True)
plt.show()

"""### DISTRIBUTION OF TARGET TYPE USING A PIE CHART"""

data = df['Target Type'].value_counts()
explode = (0.1,) * len(data)

plt.figure(figsize=(10, 10))
data.plot(kind='pie', autopct="%0.1f%%", explode=explode, labels=data.index, startangle=90, shadow=True)
plt.title('Distribution of Target Type')
plt.ylabel('')
plt.show()

"""### BAR PLOT"""

plt.figure(figsize=(10, 10))
y = sns.barplot(data=df, x='Mission Type', y='Mission Cost (billion USD)', color='orange')
y.bar_label(y.containers[0])
plt.title('Mission Type by Mission Cost (billion USD)')
plt.xlabel('Mission Type')
plt.ylabel('Mission Cost (billion USD)')
plt.show()

"""### SEABORN COUNTPLOT"""

sns.countplot(
    x='Mission Type',
    data=df,
    hue='Mission Type',
    palette='pastel',
    order=df['Mission Type'].value_counts().index,
    legend=False
)
plt.title('Distribution of Mission Type')
plt.xlabel('Mission Type')
plt.ylabel('Count')
plt.show()

"""### SCATTER PLOT"""

plt.figure(figsize=(10, 8))
scatter = sns.scatterplot(
    data=df,
    x='Distance from Earth (light-years)',
    y='Scientific Yield (points)',
    hue='Mission Success (%)',
    palette='coolwarm',
    size='Mission Cost (billion USD)',
    sizes=(10, 200),
    alpha=0.6
)

plt.title('Missions by Distance and Scientific Yield')
plt.xlabel('Distance from Earth (light-years)')
plt.ylabel('Scientific Yield (points)')

plt.legend(title='Mission Success (%)', loc='upper right', bbox_to_anchor=(1.15, 1))
plt.show()

"""### TOP 10 MOST FREQUENT MISSION NAMES USING A BAR CHART"""

top_mission_names = df['Mission Name'].value_counts().head(10)

plt.figure(figsize=(12, 6))
sns.barplot(
    x=top_mission_names.values,
    y=top_mission_names.index,
    palette='viridis',
    hue=top_mission_names.index,
    dodge=False
)

plt.title('Top 10 Most Frequent Mission Names')
plt.xlabel('Count')
plt.ylabel('Mission Name')
plt.legend([],[], frameon=False)
plt.show()

